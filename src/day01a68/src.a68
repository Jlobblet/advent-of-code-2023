PROC parse digit = (CHAR c) INT: ((ABS c) - (ABS "0"));

INT part one := 0;
WHILE
    STRING line;
    BOOL finished reading := FALSE;
    on logical file end (stand in, (REF FILE f) BOOL: finished reading := TRUE);
    get(stand in, (line, new line));
    NOT finished reading
DO
    INT low := 0, high := 0;
    BOOL finished := FALSE;
    # Part one #
    FOR i FROM LWB line BY 1 TO UPB line
    WHILE NOT finished
    DO
        (CHAR c := line[i]; is digit(c) | low := parse digit (c); finished := TRUE)
    OD;
    finished := FALSE;
    FOR i FROM UPB line BY -1 TO LWB line
    WHILE NOT finished
    DO
        (CHAR c := line[i]; is digit(c) | print(c); high := parse digit (c); finished := TRUE)
    OD;
    part one +:= low * 10 + high
OD;

print((part one, new line))
